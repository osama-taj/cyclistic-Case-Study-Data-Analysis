library(readxl)
New_Microsoft_Excel_Worksheet <- read_excel("C:/Users/taj 1/Downloads/Divvy_Trips_2019/New Microsoft Excel Worksheet.xlsx")
View(New_Microsoft_Excel_Worksheet)
library(readxl)
q2 <- read_excel("C:/Users/taj 1/Downloads/Divvy_Trips_2019/New Microsoft Excel Worksheet.xlsx",
sheet = "Q2")
View(q2)
library(readxl)
q3 <- read_excel("C:/Users/taj 1/Downloads/Divvy_Trips_2019/New Microsoft Excel Worksheet.xlsx",
sheet = "Q3-1")
View(q3)
gc()
q1=read.csv("Divvy_Trips_2019_Q1.csv")
q2=read.csv("Divvy_Trips_2019_Q2.csv")
q3=read.csv("Divvy_Trips_2019_Q3.csv")
q4=read.csv("Divvy_Trips_2019_Q4.csv")
#install.packages("tidyverse")
library(tidyverse)
library(dplyr)
q2 <- q2 %>%
rename(
trip_id = X01...Rental.Details.Rental.ID,
start_time = X01...Rental.Details.Local.Start.Time,
end_time = X01...Rental.Details.Local.End.Time,
bikeid=X01...Rental.Details.Bike.ID,
tripduration=X01...Rental.Details.Duration.In.Seconds.Uncapped,
from_station_id=X03...Rental.Start.Station.ID,
from_station_name=X03...Rental.Start.Station.Name,
to_station_id=X02...Rental.End.Station.ID,
to_station_name=X02...Rental.End.Station.Name,
usertype=User.Type,
gender=Member.Gender,
birthyear=X05...Member.Details.Member.Birthday.Year
)
library(lubridate)
q3 <- q3 %>%
mutate(
start_time = format(ymd_hms(start_time), "%m/%d/%Y %H:%M")
)
q3 <- q3 %>%
mutate(
end_time = format(ymd_hms(end_time), "%m/%d/%Y %H:%M")
)
q4 <- q4 %>%
mutate(
start_time = format(ymd_hms(start_time), "%m/%d/%Y %H:%M")
)
q4 <- q4 %>%
mutate(
end_time = format(ymd_hms(end_time), "%m/%d/%Y %H:%M")
)
all_q <- bind_rows(q1, q2,q3,q4)
all_q <- all_q %>%
mutate(
obj = mdy_hm(end_time),  # Parse datetime format
day_name = wday(obj, label = TRUE, abbr = FALSE),  # Full day name
month_name = month(obj, label = TRUE, abbr = FALSE)  # Full month name
)
all_q <- all_q %>%
mutate(
gender = ifelse(nchar(gender) > 0, substr(gender, 1, 1), "N")
)
all_q <- all_q %>%
mutate(
age = ifelse(is.na(birthyear), 0, 2024-birthyear)
)
install.packages("odbc")
library(odbc)
access_file <- "all_q.accdb"
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
access_file <- "all_q.accdb"
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
dbWriteTable(conn, "YourTableName", df, overwrite = TRUE, row.names = FALSE)
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};", "DBQ=", access_file, ";"))
print(conn)
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
install.packages("RODBC")
library(RODBC)
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
odbc::odbcListDrivers()
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};","DBQ=all_q.accdb;" ))
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\Users\taj 1\Documents\R scr\myCaseStudy;" ))
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\Users\taj 1\Documents\R scr\myCaseStudy;" ))
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\\Users\\taj 1\\Documents\\R scr\\myCaseStudy;" ))
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\\Users\\taj 1\\Documents\\R scr\\myCaseStudy\\all_q.accdb;" ))
dbWriteTable(conn, "all_q", all_q, overwrite = TRUE, row.names = FALSE)
print(conn)
dbWriteTable(conn, "all_q", all_q, overwrite = TRUE, row.names = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
#conn <- dbConnect(odbc::odbc(),
#                 .connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_file))
#dbWriteTable(conn, "all_q", all_q, overwrite = TRUE, row.names = FALSE)
print(conn)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
str(all_q)
all_q <- subset(all_q, select = -obj)
str(all_q)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
conn <- dbConnect(odbc::odbc(),
.connection_string = paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\\Users\\taj 1\\Documents\\R scr\\myCaseStudy\\all_q.accdb;"))
dbWriteTable(conn, "all_q", all_q, overwrite = TRUE, row.names = FALSE)
print(conn)
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\\Users\\taj 1\\Documents\\R scr\\myCaseStudy\\all_q.accdb;" ))
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};",
"DBQ=C:\\Users\\taj 1\\Documents\\R scr\\myCaseStudy\\all_q1.accdb;" ))
sqlSave(conn, all_q, tablename = "all_q", rownames = FALSE, append = FALSE)
all_q <- all_q %>% arrange(start_time)
all_q <- all_q %>% count(user type)
all_q <- all_q %>% count(usertype)
all_q <- all_q %>% count(usertype)
print(all_q)
q2 <- q2 %>%
rename(
trip_id = X01...Rental.Details.Rental.ID,
start_time = X01...Rental.Details.Local.Start.Time,
end_time = X01...Rental.Details.Local.End.Time,
bikeid=X01...Rental.Details.Bike.ID,
tripduration=X01...Rental.Details.Duration.In.Seconds.Uncapped,
from_station_id=X03...Rental.Start.Station.ID,
from_station_name=X03...Rental.Start.Station.Name,
to_station_id=X02...Rental.End.Station.ID,
to_station_name=X02...Rental.End.Station.Name,
usertype=User.Type,
gender=Member.Gender,
birthyear=X05...Member.Details.Member.Birthday.Year
)
all_q <- bind_rows(q1, q2,q3,q4)
all_q <- all_q %>%
mutate(
obj = mdy_hm(end_time),  # Parse datetime format
day_name = wday(obj, label = TRUE, abbr = FALSE),  # Full day name
month_name = month(obj, label = TRUE, abbr = FALSE)  # Full month name
)
all_q <- all_q %>%
mutate(
gender = ifelse(nchar(gender) > 0, substr(gender, 1, 1), "N")
)
all_q <- all_q %>%
mutate(
age = ifelse(is.na(birthyear), 0, 2024-birthyear)
)
all_q <- subset(all_q, select = -obj)
counttypestrip <- all_q %>% count(usertype)
print(counttypestrip)
percentages <- all_q %>%
count(usertype) %>%
mutate(Percentage = (n / sum(n)) * 100)
print(percentages)
round(percentages)
percentages <- all_q %>%
count(usertype) %>%
mutate(Percentage = round((n / sum(n)) * 100, 1))
print(percentages)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
summarise(Average = mean(tripduration))
str(all_q)
all_q$tripduration <- as.numeric(all_q$tripduration)
str(all_q)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
summarise(Average = mean(tripduration))
print(averages)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
summarise(Average = mean(tripduration))
print(averages)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
aggregate(Average = mean(tripduration))
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
summarise(Average = mean(tripduration))
print(averages)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
summarise(averages = mean(tripduration))
print(averages)
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
mutate(averages = mean(Value, na.rm = TRUE))
#get the averages of trip time for each user type
averages <- all_q %>%
group_by(usertype) %>%
mutate(averages = mean(tripduration, na.rm = TRUE))
print(averages)
sum(is.na(all_q$tripduration))
str(all_q)
head(q1)
head(q2)
q3=read.csv("Divvy_Trips_2019_Q3.csv")
head(q3)
library(lubridate)
# Define the time values as strings
time1 <- "00:20:41"
time2 <- "00:00:27"
# Convert the time strings to seconds
time1_seconds <- as.numeric(hms(time1))  # Convert to seconds
time2_seconds <- as.numeric(hms(time2))  # Convert to seconds
# Subtract the times
time_diff_seconds <- time1_seconds - time2_seconds
# Convert the difference back to "HH:MM:SS" format
time_diff <- seconds_to_period(time_diff_seconds)
# Print the result
time_diff
sum(is.na(all_q$tripduration))
sum(is.na(all_q$start_time))
sum(is.na(all_q$end_time))
View(all_q)
